{"version":3,"sources":["media/spaceX.png","components/navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","Fragment","Navbar","style","backgroundColor","expand","variant","fixed","Container","to","src","SpaceXImg","loading","height","width","maxWidth","maxHeight","Toggle","aria-controls","Collapse","id","Nav","className","exact","activeClassName","icon","faUserAstronaut","faRocket","faSpaceShuttle","Loading","Loadable","opts","L","AsyncHome","loader","AsyncRocket","AsyncLaunches","AsyncRocketDetail","queryClient","QueryClient","App","QueryClientProvider","client","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,G,MAAA,IAA0B,oC,+DCgC1BA,EAtBI,WACjB,OACE,cAAC,IAAMC,SAAP,UACE,cAACC,EAAA,EAAD,CAAQC,MAAO,CAAEC,gBAAiB,SAAWC,OAAO,KAAKC,QAAQ,OAAOC,MAAM,MAA9E,SACE,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKC,IAAKC,EAAWC,QAAQ,OAAOT,MAAO,CAACU,OAAO,OAAQC,MAAM,OAAQC,SAAS,QAASC,UAAU,YAEvG,cAACd,EAAA,EAAOe,OAAR,CAAeC,gBAAc,qBAC7B,cAAChB,EAAA,EAAOiB,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,eAAf,UACE,eAAC,IAAD,CAASC,OAAK,EAACd,GAAG,IAAIa,UAAU,gBAAgBE,gBAAgB,cAAhE,UAA8E,cAAC,IAAD,CAAiBC,KAAMC,MAAoB,IAAzH,UACA,eAAC,IAAD,CAASjB,GAAG,WAAWa,UAAU,gBAAgBE,gBAAgB,cAAjE,UAA+E,cAAC,IAAD,CAAiBC,KAAME,MAAa,IAAnH,aACA,eAAC,IAAD,CAASlB,GAAG,YAAYa,UAAU,gBAAgBE,gBAAgB,cAAlE,UAAgF,cAAC,IAAD,CAAiBC,KAAMG,MAAmB,IAA1H,2B,wCChBVC,EAAW,kBAAM,8CAEjBC,EAAW,SAACC,GAAD,OAAUC,IAAE,aAC3BpB,QAASiB,GACNE,KAGCE,EAAYH,EAAS,CACzBI,OAAQ,kBAAM,kCAGVC,EAAcL,EAAS,CAC3BI,OAAQ,kBAAM,uDAGVE,EAAgBN,EAAS,CAC7BI,OAAQ,kBAAM,kCAEVG,EAAoBP,EAAS,CACjCI,OAAQ,kBAAM,wDAIVI,EAAc,IAAIC,IAkBTC,EAhBH,WAAO,IAAD,EAChB,OACE,cAACC,EAAA,EAAD,CAAqBC,OAAQJ,EAA7B,SACC,eAAC,IAAD,CAAeK,SAAS,mBAAxB,UACK,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,KAAD,GAAOpB,OAAO,EAAMqB,KAAK,KAAzB,oDAA8CX,GAA9C,IACA,cAAC,IAAD,CAAOW,KAAK,WAAWrB,OAAK,EAACsB,UAAWV,IACxC,cAAC,IAAD,CAAOS,KAAK,YAAYrB,OAAK,EAACsB,UAAWT,IACzC,cAAC,IAAD,CAAOQ,KAAK,sBAAsBrB,OAAK,EAACsB,UAAWR,aC7BhDS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0c135699.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spaceX.02af4215.png\";","import React from \"react\";\r\nimport '../App.css'\r\nimport SpaceXImg from '../media/spaceX.png'\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Container, Navbar, Nav} from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRocket, faUserAstronaut, faSpaceShuttle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar style={{ backgroundColor: \"black\" }} expand=\"lg\" variant=\"dark\" fixed='top'>\r\n        <Container>\r\n            <Link to=\"/\">\r\n              <img src={SpaceXImg} loading=\"lazy\" style={{height:'auto', width:'auto', maxWidth:'250px', maxHeight:'60px'}} />\r\n            </Link>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ms-auto mr-5\">\r\n                <NavLink exact to=\"/\" className=\"inactive mx-2\" activeClassName=\"active mx-2\"><FontAwesomeIcon icon={faUserAstronaut} />{' '}Home</NavLink>\r\n                <NavLink to=\"/Rockets\" className=\"inactive mx-2\" activeClassName=\"active mx-2\"><FontAwesomeIcon icon={faRocket} />{' '}Rockets</NavLink>\r\n                <NavLink to=\"/Launches\" className=\"inactive mx-2\" activeClassName=\"active mx-2\"><FontAwesomeIcon icon={faSpaceShuttle} />{' '}Launches</NavLink>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </React.Fragment >\r\n  );\r\n};\r\n\r\nexport default Navigation","import './App.css';\r\nimport React, { lazy, Suspense } from 'react';\r\nimport Navigation from './components/navigation'\r\nimport L from 'react-loadable'\r\nimport { QueryClient, QueryClientProvider } from 'react-query'\r\nimport { Switch, Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nconst Loading  = () => <div>Loading...</div>\r\n\r\nconst Loadable = (opts) => L({\r\n  loading: Loading,\r\n  ...opts\r\n})\r\n\r\nconst AsyncHome = Loadable({\r\n  loader: () => import('./pages/Hompege')\r\n})\r\n\r\nconst AsyncRocket = Loadable({\r\n  loader: () => import('./pages/Rocket')\r\n})\r\n\r\nconst AsyncLaunches = Loadable({\r\n  loader: () => import('./pages/Launches')\r\n})\r\nconst AsyncRocketDetail = Loadable({\r\n  loader: () => import('./View/SectionRocket2')\r\n})\r\n\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst App = () => {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n     <BrowserRouter basename='/SpaceX_Homework'>\r\n          <Navigation />\r\n          <Switch>\r\n            <Route exact={true} path=\"/\" exact component={AsyncHome}/>\r\n            <Route path=\"/Rockets\" exact component={AsyncRocket}/>\r\n            <Route path=\"/Launches\" exact component={AsyncLaunches}/>\r\n            <Route path=\"/Rockets/detail/:id\" exact component={AsyncRocketDetail}/>\r\n          </Switch>\r\n      </BrowserRouter>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}